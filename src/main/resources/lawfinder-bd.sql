-- Created by Vertabelo (http://vertabelo.com)
-- Last modification date: 2024-05-27 16:00:53.035

-- tables
-- Table: ACTOR
CREATE TABLE ACTOR (
    ACTOR_ID serial  NOT NULL,
    USER_ID int  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT ACTOR_pk PRIMARY KEY (ACTOR_ID)
);

-- Table: APPLICATION_LOG
CREATE TABLE APPLICATION_LOG (
    LOG_ID serial  NOT NULL,
    USER_LOG varchar(255)  NULL,
    DATE timestamp  NOT NULL,
    HOST varchar(100)  NOT NULL,
    DESCRIPTION text  NOT NULL,
    CATEGORY_ID int  NOT NULL,
    LEVEL_ID int  NOT NULL,
    CONSTRAINT APPLICATION_LOG_pk PRIMARY KEY (LOG_ID)
);

-- Table: AUDIENCE
CREATE TABLE AUDIENCE (
    AUDIENCE_ID serial  NOT NULL,
    AUDIENCE_DATE timestamp  NOT NULL,
    DESCRIPTION text  NOT NULL,
    LINK text  NOT NULL,
    ADDRESS text  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    CONSTRAINT AUDIENCE_pk PRIMARY KEY (AUDIENCE_ID)
);

-- Table: CATEGORY
CREATE TABLE CATEGORY (
    CATEGORY_ID serial  NOT NULL,
    CATEGORY_NAME Varchar(100)  NOT NULL,
    DESCRIPTION Varchar(2000)  NOT NULL,
    CONSTRAINT CATEGORY_pk PRIMARY KEY (CATEGORY_ID)
);

-- Table: COMMENT
CREATE TABLE COMMENT (
    COMMENT_ID serial  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    COMMENT_CONTENT Text  NOT NULL,
    SE_USER_ID int  NOT NULL,
    COMMENT_DATE date  NOT NULL,
    CONSTRAINT COMMENT_pk PRIMARY KEY (COMMENT_ID)
);

-- Table: CONFIDENTIALITY
CREATE TABLE CONFIDENTIALITY (
    ID_CONFIDENTIALITY serial  NOT NULL,
    DESCRIPTION varchar(50)  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT CONFIDENTIALITY_pk PRIMARY KEY (ID_CONFIDENTIALITY)
);

-- Table: COUNTERPART
CREATE TABLE COUNTERPART (
    COUNTERPART_ID serial  NOT NULL,
    COUNTERPART_NAME Varchar(2000)  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    CONSTRAINT COUNTERPART_pk PRIMARY KEY (COUNTERPART_ID)
);

-- Table: COURT
CREATE TABLE COURT (
    COURT_ID serial  NOT NULL,
    COURT_NAME text  NOT NULL,
    CONSTRAINT COURT_pk PRIMARY KEY (COURT_ID)
);

-- Table: CRIME
CREATE TABLE CRIME (
    CRIME_ID serial  NOT NULL,
    NAME Varchar(1000)  NOT NULL,
    PRISON_SENTENCE Varchar(100)  NOT NULL,
    SUBCATEGORY_ID int  NOT NULL,
    CONSTRAINT CRIME_pk PRIMARY KEY (CRIME_ID)
);

-- Table: DEPARTMENT
CREATE TABLE DEPARTMENT (
    DEPARTMENT_ID serial  NOT NULL,
    DEPARTMENT_NAME Varchar(100)  NOT NULL,
    CONSTRAINT DEPARTMENT_pk PRIMARY KEY (DEPARTMENT_ID)
);

-- Table: FILE
CREATE TABLE FILE (
    FILE_ID serial  NOT NULL,
    URL Varchar(1000)  NOT NULL,
    MIME_TYPE Varchar(60)  NOT NULL,
    SIZE Varchar(60)  NOT NULL,
    MD5 Varchar(60)  NOT NULL,
    TX_USER varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE timestamp  NOT NULL,
    CONSTRAINT FILE_pk PRIMARY KEY (FILE_ID)
);

-- Table: H_FILE
CREATE TABLE H_FILE (
    H_FILE_ID serial  NOT NULL,
    FILE_ID int  NOT NULL,
    URL Varchar(1000)  NOT NULL,
    MIME_TYPE Varchar(60)  NOT NULL,
    SIZE Varchar(60)  NOT NULL,
    MD5 Varchar(60)  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_FILE_pk PRIMARY KEY (H_FILE_ID)
);

-- Table: H_LEGAL_CASE
CREATE TABLE H_LEGAL_CASE (
    H_LEGAL_CASE_ID serial  NOT NULL,
    ID_LEGAL_CASE int  NOT NULL,
    TITLE Varchar(2000)  NOT NULL,
    START_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    STATUS Varchar(100)  NOT NULL,
    FIRST_INSTANCE_COURT Varchar(100)  NOT NULL,
    SECOND_INSTANCE_COURT Varchar(100)  NOT NULL,
    THIRD_INSTANCE_COURT Varchar(100)  NOT NULL,
    USER_ID int  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_LEGAL_CASE_pk PRIMARY KEY (H_LEGAL_CASE_ID)
);

-- Table: H_SE_USER
CREATE TABLE H_SE_USER (
    H_USER_ID serial  NOT NULL,
    USER_ID int  NOT NULL,
    USERNAME Varchar(100)  NOT NULL,
    SECRET Varchar(60)  NOT NULL,
    STATUS boolean  NOT NULL,
    PERSON_ID int  NOT NULL,
    IMAGE_ID int  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_SE_USER_pk PRIMARY KEY (H_USER_ID)
);

-- Table: H_SE_USER_ROLE
CREATE TABLE H_SE_USER_ROLE (
    H_SE_USER_ROLE_ID serial  NOT NULL,
    USER_ROLE__ID int  NOT NULL,
    ROLE_ID int  NOT NULL,
    USER_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_SE_USER_ROLE_pk PRIMARY KEY (H_SE_USER_ROLE_ID)
);

-- Table: INSTANCE
CREATE TABLE INSTANCE (
    INSTANCE_ID serial  NOT NULL,
    INSTANCE_NAME Varchar(1000)  NOT NULL,
    CONSTRAINT INSTANCE_pk PRIMARY KEY (INSTANCE_ID)
);

-- Table: INSTANCE_LEGAL_CASE
CREATE TABLE INSTANCE_LEGAL_CASE (
    INSTANCE_LEGAL_CASE_ID serial  NOT NULL,
    INSTANCE_ID int  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    START_DATE date  NOT NULL,
    END_DATE date  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT INSTANCE_LEGAL_CASE_pk PRIMARY KEY (INSTANCE_LEGAL_CASE_ID)
);

-- Table: LEGAL_CASE
CREATE TABLE LEGAL_CASE (
    LEGAL_CASE_ID serial  NOT NULL,
    ID_CONFIDENTIALITY int  NOT NULL,
    USER_ID int  NOT NULL,
    CRIME_ID int  NOT NULL,
    PROVINCE_ID int  NOT NULL,
    TITLE Varchar(2000)  NOT NULL,
    START_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    COMPLAINANT boolean  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT LEGAL_CASE_pk PRIMARY KEY (LEGAL_CASE_ID)
);

-- Table: LEGAL_FILE
CREATE TABLE LEGAL_FILE (
    LEGAL_FILE_ID serial  NOT NULL,
    FILE_ID int  NOT NULL,
    COURT_ID int  NOT NULL,
    LEGAL_FILE_TYPE_ID int  NOT NULL,
    INSTANCE_LEGAL_CASE_ID int  NOT NULL,
    RESOLUTION_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT LEGAL_FILE_pk PRIMARY KEY (LEGAL_FILE_ID)
);

-- Table: LEGAL_FILE_TYPE
CREATE TABLE LEGAL_FILE_TYPE (
    LEGAL_FILE_TYPE_ID serial  NOT NULL,
    FILE_NAME Varchar(1000)  NOT NULL,
    CONSTRAINT LEGAL_FILE_TYPE_pk PRIMARY KEY (LEGAL_FILE_TYPE_ID)
);

-- Table: LOG_CATEGORY
CREATE TABLE LOG_CATEGORY (
    CATEGORY_ID serial  NOT NULL,
    CATEGORY_NAME varchar(255)  NOT NULL,
    CONSTRAINT LOG_CATEGORY_pk PRIMARY KEY (CATEGORY_ID)
);

-- Table: LOG_LEVEL
CREATE TABLE LOG_LEVEL (
    LEVEL_ID serial  NOT NULL,
    LEVEL_NAME varchar(255)  NOT NULL,
    CONSTRAINT LOG_LEVEL_pk PRIMARY KEY (LEVEL_ID)
);

-- Table: PERSON
CREATE TABLE PERSON (
    PERSON_ID serial  NOT NULL,
    NAME Varchar(100)  NOT NULL,
    LASTNAME Varchar(100)  NOT NULL,
    CI Varchar(60)  NOT NULL,
    COMPLEMENT varchar(60)  NULL,
    NUMBER Varchar(100)  NOT NULL,
    EMAIL Varchar(300)  NOT NULL,
    ADDRESS Varchar(1000)  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT PERSON_pk PRIMARY KEY (PERSON_ID)
);

-- Table: PRIVILEGE
CREATE TABLE PRIVILEGE (
    PRIVILEGE_ID serial  NOT NULL,
    PRIVILEGE Varchar(100)  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT PRIVILEGE_pk PRIMARY KEY (PRIVILEGE_ID)
);

-- Table: PRIVILEGE_ROLE
CREATE TABLE PRIVILEGE_ROLE (
    PRIVROLE_ID serial  NOT NULL,
    PRIVILEGE_ID int  NOT NULL,
    ROLE_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT PRIVILEGE_ROLE_pk PRIMARY KEY (PRIVROLE_ID)
);

-- Table: PROVINCE
CREATE TABLE PROVINCE (
    PROVINCE_ID serial  NOT NULL,
    DEPARTMENT_ID int  NOT NULL,
    PROVINCE_NAME Varchar(100)  NOT NULL,
    CONSTRAINT PROVINCE_pk PRIMARY KEY (PROVINCE_ID)
);

-- Table: ROLE
CREATE TABLE ROLE (
    ROLE_ID serial  NOT NULL,
    ROLENAME Varchar(100)  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT ROLE_pk PRIMARY KEY (ROLE_ID)
);

-- Table: SECURITY_LOG
CREATE TABLE SECURITY_LOG (
    LOG_ID serial  NOT NULL,
    USER_LOG varchar(255)  NULL,
    DATE timestamp  NOT NULL,
    HOST varchar(100)  NOT NULL,
    DESCRIPTION text  NOT NULL,
    CATEGORY_ID int  NOT NULL,
    CONSTRAINT SECURITY_LOG_pk PRIMARY KEY (LOG_ID)
);

-- Table: SE_USER
CREATE TABLE SE_USER (
    USER_ID serial  NOT NULL,
    PERSON_ID int  NOT NULL,
    USERNAME Varchar(100)  NOT NULL,
    SECRET Varchar(60)  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    ISBLOCKED int  NOT NULL,
    CONSTRAINT SE_USER_pk PRIMARY KEY (USER_ID)
);

-- Table: SE_USER_ROLE
CREATE TABLE SE_USER_ROLE (
    USER_ROLE_ID serial  NOT NULL,
    ROLE_ID int  NOT NULL,
    USER_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT SE_USER_ROLE_pk PRIMARY KEY (USER_ROLE_ID)
);

-- Table: SE_VERIFICATION
CREATE TABLE SE_VERIFICATION (
    VERIFICATION_ID serial  NOT NULL,
    UUID Varchar(100)  NOT NULL,
    EXPIRATION_DATE date  NOT NULL,
    CODE_HASH Varchar(100)  NOT NULL,
    VC_TYPE Varchar(50)  NOT NULL,
    DEVICE_ID Varchar(100)  NOT NULL,
    CONSTRAINT SE_VERIFICATION_pk PRIMARY KEY (VERIFICATION_ID)
);

-- Table: SUB_CATEGORY
CREATE TABLE SUB_CATEGORY (
    SUBCATEGORY_ID serial  NOT NULL,
    CATEGORY_ID int  NOT NULL,
    SUB_CATEGORY_NAME Varchar(100)  NOT NULL,
    DESCRIPTION Varchar(2000)  NOT NULL,
    CONSTRAINT SUB_CATEGORY_pk PRIMARY KEY (SUBCATEGORY_ID)
);

-- foreign keys
-- Reference: ACTOR_LEGAL_CASE (table: ACTOR)
ALTER TABLE ACTOR ADD CONSTRAINT ACTOR_LEGAL_CASE
    FOREIGN KEY (LEGAL_CASE_ID)
    REFERENCES LEGAL_CASE (LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: ACTOR_SE_USER (table: ACTOR)
ALTER TABLE ACTOR ADD CONSTRAINT ACTOR_SE_USER
    FOREIGN KEY (USER_ID)
    REFERENCES SE_USER (USER_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: APPLICATION_LOG_LOG_CATEGORY (table: APPLICATION_LOG)
ALTER TABLE APPLICATION_LOG ADD CONSTRAINT APPLICATION_LOG_LOG_CATEGORY
    FOREIGN KEY (CATEGORY_ID)
    REFERENCES LOG_CATEGORY (CATEGORY_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: APPLICATION_LOG_LOG_LEVEL (table: APPLICATION_LOG)
ALTER TABLE APPLICATION_LOG ADD CONSTRAINT APPLICATION_LOG_LOG_LEVEL
    FOREIGN KEY (LEVEL_ID)
    REFERENCES LOG_LEVEL (LEVEL_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: AUDIENCE_LEGAL_CASE (table: AUDIENCE)
ALTER TABLE AUDIENCE ADD CONSTRAINT AUDIENCE_LEGAL_CASE
    FOREIGN KEY (LEGAL_CASE_ID)
    REFERENCES LEGAL_CASE (LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: COMMENT_LEGAL_CASE (table: COMMENT)
ALTER TABLE COMMENT ADD CONSTRAINT COMMENT_LEGAL_CASE
    FOREIGN KEY (LEGAL_CASE_ID)
    REFERENCES LEGAL_CASE (LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: COMMENT_SE_USER (table: COMMENT)
ALTER TABLE COMMENT ADD CONSTRAINT COMMENT_SE_USER
    FOREIGN KEY (SE_USER_ID)
    REFERENCES SE_USER (USER_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: COUNTERPART_LEGAL_CASE (table: COUNTERPART)
ALTER TABLE COUNTERPART ADD CONSTRAINT COUNTERPART_LEGAL_CASE
    FOREIGN KEY (LEGAL_CASE_ID)
    REFERENCES LEGAL_CASE (LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: CRIME_SUB_CATEGORY (table: CRIME)
ALTER TABLE CRIME ADD CONSTRAINT CRIME_SUB_CATEGORY
    FOREIGN KEY (SUBCATEGORY_ID)
    REFERENCES SUB_CATEGORY (SUBCATEGORY_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: INSTANCE_LEGAL_CASE_INSTANCE (table: INSTANCE_LEGAL_CASE)
ALTER TABLE INSTANCE_LEGAL_CASE ADD CONSTRAINT INSTANCE_LEGAL_CASE_INSTANCE
    FOREIGN KEY (INSTANCE_ID)
    REFERENCES INSTANCE (INSTANCE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: INSTANCE_LEGAL_CASE_LEGAL_CASE (table: INSTANCE_LEGAL_CASE)
ALTER TABLE INSTANCE_LEGAL_CASE ADD CONSTRAINT INSTANCE_LEGAL_CASE_LEGAL_CASE
    FOREIGN KEY (LEGAL_CASE_ID)
    REFERENCES LEGAL_CASE (LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: LEGAL_CASES_SE_USER (table: LEGAL_CASE)
ALTER TABLE LEGAL_CASE ADD CONSTRAINT LEGAL_CASES_SE_USER
    FOREIGN KEY (USER_ID)
    REFERENCES SE_USER (USER_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: LEGAL_CASE_CONFIDENCIALIDAD (table: LEGAL_CASE)
ALTER TABLE LEGAL_CASE ADD CONSTRAINT LEGAL_CASE_CONFIDENCIALIDAD
    FOREIGN KEY (ID_CONFIDENTIALITY)
    REFERENCES CONFIDENTIALITY (ID_CONFIDENTIALITY)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: LEGAL_CASE_CRIME (table: LEGAL_CASE)
ALTER TABLE LEGAL_CASE ADD CONSTRAINT LEGAL_CASE_CRIME
    FOREIGN KEY (CRIME_ID)
    REFERENCES CRIME (CRIME_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: LEGAL_CASE_PROVINCE (table: LEGAL_CASE)
ALTER TABLE LEGAL_CASE ADD CONSTRAINT LEGAL_CASE_PROVINCE
    FOREIGN KEY (PROVINCE_ID)
    REFERENCES PROVINCE (PROVINCE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: LEGAL_FILE_LEGAL_FILE_TYPE (table: LEGAL_FILE)
ALTER TABLE LEGAL_FILE ADD CONSTRAINT LEGAL_FILE_LEGAL_FILE_TYPE
    FOREIGN KEY (LEGAL_FILE_TYPE_ID)
    REFERENCES LEGAL_FILE_TYPE (LEGAL_FILE_TYPE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: PRIVILEGE_ROLE_PRIVILEGE (table: PRIVILEGE_ROLE)
ALTER TABLE PRIVILEGE_ROLE ADD CONSTRAINT PRIVILEGE_ROLE_PRIVILEGE
    FOREIGN KEY (PRIVILEGE_ID)
    REFERENCES PRIVILEGE (PRIVILEGE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: PRIVILEGE_ROLE_ROLE (table: PRIVILEGE_ROLE)
ALTER TABLE PRIVILEGE_ROLE ADD CONSTRAINT PRIVILEGE_ROLE_ROLE
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: PROVINCES_DEPARTMENT (table: PROVINCE)
ALTER TABLE PROVINCE ADD CONSTRAINT PROVINCES_DEPARTMENT
    FOREIGN KEY (DEPARTMENT_ID)
    REFERENCES DEPARTMENT (DEPARTMENT_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: RESOLUTION_COURT (table: LEGAL_FILE)
ALTER TABLE LEGAL_FILE ADD CONSTRAINT RESOLUTION_COURT
    FOREIGN KEY (COURT_ID)
    REFERENCES COURT (COURT_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: RESOLUTION_FILE (table: LEGAL_FILE)
ALTER TABLE LEGAL_FILE ADD CONSTRAINT RESOLUTION_FILE
    FOREIGN KEY (FILE_ID)
    REFERENCES FILE (FILE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: RESOLUTION_INSTANCE_LEGAL_CASE (table: LEGAL_FILE)
ALTER TABLE LEGAL_FILE ADD CONSTRAINT RESOLUTION_INSTANCE_LEGAL_CASE
    FOREIGN KEY (INSTANCE_LEGAL_CASE_ID)
    REFERENCES INSTANCE_LEGAL_CASE (INSTANCE_LEGAL_CASE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: SECURITY_LOG_LOG_CATEGORY (table: SECURITY_LOG)
ALTER TABLE SECURITY_LOG ADD CONSTRAINT SECURITY_LOG_LOG_CATEGORY
    FOREIGN KEY (CATEGORY_ID)
    REFERENCES LOG_CATEGORY (CATEGORY_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: SE_USER_PERSON (table: SE_USER)
ALTER TABLE SE_USER ADD CONSTRAINT SE_USER_PERSON
    FOREIGN KEY (PERSON_ID)
    REFERENCES PERSON (PERSON_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: SE_USER_ROLE_ROLE (table: SE_USER_ROLE)
ALTER TABLE SE_USER_ROLE ADD CONSTRAINT SE_USER_ROLE_ROLE
    FOREIGN KEY (ROLE_ID)
    REFERENCES ROLE (ROLE_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: SE_USER_ROLE_SE_USER (table: SE_USER_ROLE)
ALTER TABLE SE_USER_ROLE ADD CONSTRAINT SE_USER_ROLE_SE_USER
    FOREIGN KEY (USER_ID)
    REFERENCES SE_USER (USER_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- Reference: SUB_CATEGORY_CATEGORY (table: SUB_CATEGORY)
ALTER TABLE SUB_CATEGORY ADD CONSTRAINT SUB_CATEGORY_CATEGORY
    FOREIGN KEY (CATEGORY_ID)
    REFERENCES CATEGORY (CATEGORY_ID)  
    NOT DEFERRABLE 
    INITIALLY IMMEDIATE
;

-- End of file.

