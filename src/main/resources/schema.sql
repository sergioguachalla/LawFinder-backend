--drop tables
DROP TABLE IF EXISTS ACTOR CASCADE;
DROP TABLE IF EXISTS AUDIENCE CASCADE;
DROP TABLE IF EXISTS CATEGORY CASCADE;
DROP TABLE IF EXISTS COMMENT CASCADE;
DROP TABLE IF EXISTS COUNTERPART CASCADE;
DROP TABLE IF EXISTS COURT CASCADE;
DROP TABLE IF EXISTS CRIME CASCADE;
DROP TABLE IF EXISTS DEPARTMENT CASCADE;
DROP TABLE IF EXISTS FILE CASCADE;
DROP TABLE IF EXISTS H_FILE CASCADE;
DROP TABLE IF EXISTS H_LEGAL_CASE CASCADE;
DROP TABLE IF EXISTS H_SE_USER CASCADE;
DROP TABLE IF EXISTS H_SE_USER_ROLE CASCADE;
DROP TABLE IF EXISTS INSTANCE CASCADE;
DROP TABLE IF EXISTS INSTANCE_LEGAL_CASE CASCADE;
DROP TABLE IF EXISTS LEGAL_CASE CASCADE;
DROP TABLE IF EXISTS LEGAL_FILE CASCADE;
DROP TABLE IF EXISTS LEGAL_FILE_TYPE CASCADE;
DROP TABLE IF EXISTS PERSON CASCADE;
DROP TABLE IF EXISTS PRIVILEGE CASCADE;
DROP TABLE IF EXISTS PRIVILEGE_ROLE CASCADE;
DROP TABLE IF EXISTS PROVINCE CASCADE;
DROP TABLE IF EXISTS ROLE CASCADE;
DROP TABLE IF EXISTS SE_USER CASCADE;
DROP TABLE IF EXISTS SE_USER_ROLE CASCADE;
DROP TABLE IF EXISTS SE_VERIFICATION CASCADE;
DROP TABLE IF EXISTS SUB_CATEGORY CASCADE;

-- tables
-- Table: ACTOR
CREATE TABLE IF NOT EXISTS ACTOR (
    ACTOR_ID serial  NOT NULL,
    USER_ID int  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT ACTOR_pk PRIMARY KEY (ACTOR_ID)
);

-- Table: AUDIENCE
CREATE TABLE IF NOT EXISTS AUDIENCE (
    AUDIENCE_ID serial  NOT NULL,
    AUDIENCE_DATE timestamp  NOT NULL,
    DESCRIPTION text  NOT NULL,
    LINK text  NOT NULL,
    ADDRESS text  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    CONSTRAINT AUDIENCE_pk PRIMARY KEY (AUDIENCE_ID)
);

-- Table: CATEGORY
CREATE TABLE IF NOT EXISTS CATEGORY (
    CATEGORY_ID serial  NOT NULL,
    CATEGORY_NAME Varchar(100)  NOT NULL,
    DESCRIPTION Varchar(2000)  NOT NULL,
    CONSTRAINT CATEGORY_pk PRIMARY KEY (CATEGORY_ID)
);

-- Table: COMMENT
CREATE TABLE IF NOT EXISTS COMMENT (
    COMMENT_ID serial  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    COMMENT_CONTENT Text  NOT NULL,
    SE_USER_ID int  NOT NULL,
    COMMENT_DATE date  NOT NULL,
    CONSTRAINT COMMENT_pk PRIMARY KEY (COMMENT_ID)
);

-- Table: COUNTERPART
CREATE TABLE IF NOT EXISTS COUNTERPART (
    COUNTERPART_ID serial  NOT NULL,
    COUNTERPART_NAME Varchar(2000)  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    CONSTRAINT COUNTERPART_pk PRIMARY KEY (COUNTERPART_ID)
);

-- Table: COURT
CREATE TABLE IF NOT EXISTS COURT (
    COURT_ID serial  NOT NULL,
    COURT_NAME text  NOT NULL,
    CONSTRAINT COURT_pk PRIMARY KEY (COURT_ID)
);

-- Table: CRIME
CREATE TABLE IF NOT EXISTS CRIME (
    CRIME_ID serial  NOT NULL,
    NAME Varchar(1000)  NOT NULL,
    PRISON_SENTENCE Varchar(100)  NOT NULL,
    SUBCATEGORY_ID int  NOT NULL,
    CONSTRAINT CRIME_pk PRIMARY KEY (CRIME_ID)
);

-- Table: DEPARTMENT
CREATE TABLE IF NOT EXISTS DEPARTMENT (
    DEPARTMENT_ID serial  NOT NULL,
    DEPARTMENT_NAME Varchar(100)  NOT NULL,
    CONSTRAINT DEPARTMENT_pk PRIMARY KEY (DEPARTMENT_ID)
);

-- Table: FILE
CREATE TABLE IF NOT EXISTS FILE (
    FILE_ID serial  NOT NULL,
    URL Varchar(1000)  NOT NULL,
    MIME_TYPE Varchar(60)  NOT NULL,
    SIZE Varchar(60)  NOT NULL,
    MD5 Varchar(60)  NOT NULL,
    TX_USER varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE timestamp  NOT NULL,
    CONSTRAINT FILE_pk PRIMARY KEY (FILE_ID)
);

-- Table: H_FILE
CREATE TABLE IF NOT EXISTS H_FILE (
    H_FILE_ID serial  NOT NULL,
    FILE_ID int  NOT NULL,
    URL Varchar(1000)  NOT NULL,
    MIME_TYPE Varchar(60)  NOT NULL,
    SIZE Varchar(60)  NOT NULL,
    MD5 Varchar(60)  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_FILE_pk PRIMARY KEY (H_FILE_ID)
);

-- Table: H_LEGAL_CASE
CREATE TABLE IF NOT EXISTS H_LEGAL_CASE (
    H_LEGAL_CASE_ID serial  NOT NULL,
    ID_LEGAL_CASE int  NOT NULL,
    TITLE Varchar(2000)  NOT NULL,
    START_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    STATUS Varchar(100)  NOT NULL,
    FIRST_INSTANCE_COURT Varchar(100)  NOT NULL,
    SECOND_INSTANCE_COURT Varchar(100)  NOT NULL,
    THIRD_INSTANCE_COURT Varchar(100)  NOT NULL,
    USER_ID int  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_LEGAL_CASE_pk PRIMARY KEY (H_LEGAL_CASE_ID)
);

-- Table: H_SE_USER
CREATE TABLE IF NOT EXISTS H_SE_USER (
    H_USER_ID serial  NOT NULL,
    USER_ID int  NOT NULL,
    USERNAME Varchar(100)  NOT NULL,
    SECRET Varchar(60)  NOT NULL,
    STATUS boolean  NOT NULL,
    PERSON_ID int  NOT NULL,
    IMAGE_ID int  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_SE_USER_pk PRIMARY KEY (H_USER_ID)
);

-- Table: H_SE_USER_ROLE
CREATE TABLE IF NOT EXISTS H_SE_USER_ROLE (
    H_SE_USER_ROLE_ID serial  NOT NULL,
    USER_ROLE__ID int  NOT NULL,
    ROLE_ID int  NOT NULL,
    USER_ID int  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT H_SE_USER_ROLE_pk PRIMARY KEY (H_SE_USER_ROLE_ID)
);

-- Table: INSTANCE
CREATE TABLE IF NOT EXISTS INSTANCE (
    INSTANCE_ID serial  NOT NULL,
    INSTANCE_NAME Varchar(1000)  NOT NULL,
    CONSTRAINT INSTANCE_pk PRIMARY KEY (INSTANCE_ID)
);

-- Table: INSTANCE_LEGAL_CASE
CREATE TABLE IF NOT EXISTS INSTANCE_LEGAL_CASE (
    INSTANCE_LEGAL_CASE_ID serial  NOT NULL,
    INSTANCE_ID int  NOT NULL,
    LEGAL_CASE_ID int  NOT NULL,
    START_DATE date  NOT NULL,
    END_DATE date  NOT NULL,
    STATUS boolean  NOT NULL,
    CONSTRAINT INSTANCE_LEGAL_CASE_pk PRIMARY KEY (INSTANCE_LEGAL_CASE_ID)
);

-- Table: LEGAL_CASE
CREATE TABLE IF NOT EXISTS LEGAL_CASE (
    LEGAL_CASE_ID serial  NOT NULL,
    USER_ID int  NOT NULL,
    CRIME_ID int  NOT NULL,
    PROVINCE_ID int  NOT NULL,
    TITLE Varchar(2000)  NOT NULL,
    START_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    COMPLAINANT boolean  NOT NULL,
    STATUS boolean  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT LEGAL_CASE_pk PRIMARY KEY (LEGAL_CASE_ID)
);

-- Table: LEGAL_FILE
CREATE TABLE IF NOT EXISTS LEGAL_FILE (
    LEGAL_FILE_ID serial  NOT NULL,
    FILE_ID int  NOT NULL,
    COURT_ID int  NOT NULL,
    LEGAL_FILE_TYPE_ID int  NOT NULL,
    INSTANCE_LEGAL_CASE_ID int  NOT NULL,
    RESOLUTION_DATE date  NOT NULL,
    SUMMARY text  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT LEGAL_FILE_pk PRIMARY KEY (LEGAL_FILE_ID)
);

-- Table: LEGAL_FILE_TYPE
CREATE TABLE IF NOT EXISTS LEGAL_FILE_TYPE (
    LEGAL_FILE_TYPE_ID serial  NOT NULL,
    FILE_NAME Varchar(1000)  NOT NULL,
    CONSTRAINT LEGAL_FILE_TYPE_pk PRIMARY KEY (LEGAL_FILE_TYPE_ID)
);

-- Table: PERSON
CREATE TABLE IF NOT EXISTS PERSON (
    PERSON_ID serial  NOT NULL,
    NAME Varchar(100)  NOT NULL,
    LASTNAME Varchar(100)  NOT NULL,
    CI Varchar(60)  NOT NULL,
    COMPLEMENT varchar(60)  NULL,
    NUMBER Varchar(100)  NOT NULL,
    EMAIL Varchar(300)  NOT NULL,
    ADDRESS Varchar(1000)  NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT PERSON_pk PRIMARY KEY (PERSON_ID)
);

-- Table: PRIVILEGE
CREATE TABLE IF NOT EXISTS PRIVILEGE (
    PRIVILEGE_ID serial  NOT NULL,
    PRIVILEGE Varchar(100)  NOT NULL,
    STATUS int  NOT NULL,
    CONSTRAINT PRIVILEGE_pk PRIMARY KEY (PRIVILEGE_ID)
);

-- Table: PRIVILEGE_ROLE
CREATE TABLE IF NOT EXISTS PRIVILEGE_ROLE (
    PRIVROLE_ID serial  NOT NULL,
    PRIVILEGE_ID int  NOT NULL,
    ROLE_ID int  NOT NULL,
    STATUS int  NOT NULL,
    CONSTRAINT PRIVILEGE_ROLE_pk PRIMARY KEY (PRIVROLE_ID)
);

-- Table: PROVINCE
CREATE TABLE IF NOT EXISTS PROVINCE (
    PROVINCE_ID serial  NOT NULL,
    DEPARTMENT_ID int  NOT NULL,
    PROVINCE_NAME Varchar(100)  NOT NULL,
    CONSTRAINT PROVINCE_pk PRIMARY KEY (PROVINCE_ID)
);

-- Table: ROLE
CREATE TABLE IF NOT EXISTS ROLE (
    ROLE_ID serial  NOT NULL,
    ROLENAME Varchar(100)  NOT NULL,
    STATUS int  NOT NULL,
    CONSTRAINT ROLE_pk PRIMARY KEY (ROLE_ID)
);

-- Table: SE_USER
CREATE TABLE IF NOT EXISTS SE_USER (
    USER_ID serial  NOT NULL,
    PERSON_ID int  NOT NULL,
    USERNAME Varchar(100)  NOT NULL,
    SECRET Varchar(60)  NOT NULL,
    STATUS boolean  NOT NULL,
    ISBLOCKED boolean NOT NULL,
    TX_USER Varchar(100)  NOT NULL,
    TX_HOST Varchar(100)  NOT NULL,
    TX_DATE date  NOT NULL,
    CONSTRAINT SE_USER_pk PRIMARY KEY (USER_ID)
);

-- Table: SE_USER_ROLE
    CREATE TABLE IF NOT EXISTS SE_USER_ROLE (
        USER_ROLE_ID serial  NOT NULL,
        ROLE_ID int  NOT NULL,
        USER_ID int  NOT NULL,
        STATUS boolean  NOT NULL,
        IS_BLOCKED boolean NOT NULL DEFAULT false,
        DATE_CREATED date NOT NULL DEFAULT CURRENT_DATE,
        DATE_BLOCKED date NULL,
        TX_USER Varchar(100)  NOT NULL,
        TX_HOST Varchar(100)  NOT NULL,
        TX_DATE date  NOT NULL,
        CONSTRAINT SE_USER_ROLE_pk PRIMARY KEY (USER_ROLE_ID)
    );

-- Table: SE_VERIFICATION
CREATE TABLE IF NOT EXISTS SE_VERIFICATION (
    VERIFICATION_ID serial  NOT NULL,
    UUID Varchar(100)  NOT NULL,
    EXPIRATION_DATE date  NOT NULL,
    CODE_HASH Varchar(100)  NOT NULL,
    VC_TYPE Varchar(50)  NOT NULL,
    DEVICE_ID Varchar(100)  NOT NULL,
    CONSTRAINT SE_VERIFICATION_pk PRIMARY KEY (VERIFICATION_ID)
);

-- Table: SUB_CATEGORY
CREATE TABLE IF NOT EXISTS SUB_CATEGORY (
    SUBCATEGORY_ID serial  NOT NULL,
    CATEGORY_ID int  NOT NULL,
    SUB_CATEGORY_NAME Varchar(100)  NOT NULL,
    DESCRIPTION Varchar(2000)  NOT NULL,
    CONSTRAINT SUB_CATEGORY_pk PRIMARY KEY (SUBCATEGORY_ID)
);
